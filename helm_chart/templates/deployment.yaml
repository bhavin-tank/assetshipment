apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "#RELEASE_NAME#.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "#RELEASE_NAME#.name" . }}
    helm.sh/chart: {{ include "#RELEASE_NAME#.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
{{ toYaml .Values.updateStrategy | indent 4 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "#RELEASE_NAME#.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "#RELEASE_NAME#.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
{{- if .Values.vault }}
  {{- if eq .Values.vault.type "vault" }}
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: {{ .Values.vault.role }}
      {{- range .Values.vault.secretPath }}
        vault.hashicorp.com/agent-inject-secret-{{ .fileName}}: {{ .path }}
      {{- end }}
  {{- end }}
{{- end }}
    spec:
    {{- if .Values.vault }}
      serviceAccountName: {{ .Values.vault.serviceAccount }}
    {{- end }}
      imagePullSecrets:
        - name: {{ .Values.image.registrySecret }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: context
            value: {{ .Values.context }}

          # volumeMounts:
          #   - name: efs-pvc
          #     mountPath: ./src/main/resources
          ports:
            - name: http
              containerPort: {{ .Values.service.internalport }}
              protocol: TCP

